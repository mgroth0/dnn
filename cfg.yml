profiles:
  proto: &proto
    proto_model: True
    NTRAIN: [10]
    eval_nperc: 10
    rsa_nperc: 10
    MUSCLE: local
    offline: True
  darius: &darius
    proto_model: False
    #  needs to be somewhat consistent between fileops and train/test
    NTRAIN: [25, 50, 100, 150, 200, 1000]
    #  only for generation. Training and testing just counts files, so this doesn't need to be worried about when importing data
    eval_nperc: 500
    rsa_nperc: 10
    MUSCLE: local #  needs to be consistent but not scientifically relevant
    offline: False
  dariusSmall: &dariusSmall
    <<: *darius
    NTRAIN: [10]
    offline: True
  default:
      <<: *dariusSmall

configs:
  all: &all

    CLEAR_EG_DATA: True
    EXPERIMENT_NAME: null

  # theres an order and procedure to these
    REGEN_DATA: False
    PIPELINE: SANITY TRAIN VAL REC
    NORM_TRAIN_IMS: True
    OVERWRITE_NORMS: False

  #  weird?
    SAVE_DATA: True
    GET_LOGS: True
    PRUNE_REPORT_API: False

  #  scientifically relevant but modifiable
    EPOCHS: 10
    REPEAT_ALL: 1
    BATCH_SIZE: 10 # this might interact with the sizes of data above options for
    EXPS:
      - &default_exp
        gpus: 1
        arch: SCRATCH
      -
        <<: *default_exp
        arch: INC
      -
        <<: *default_exp
        arch: ALEX
      -
        <<: *default_exp
        arch: GNET


  # should be fully optional down to each execution, with no need for consistency
    GUI: False
    fig_backend: matplotlib # or wolfram
    RUN_EXPS_IN_SERIAL: False
    VERBOSE: True
    INTERACT: False


#    was hardcoded before
    root: _figures







  no_norm:
    <<: *all
    NORM_TRAIN_IMS: False
  debug: &debug
    <<: *all
    RUN_EXPS_IN_SERIAL: True
    INTERACT: True
  file_op_cfg: &file_op_cfg
    <<: *all #need to change this back to default or expand cfg
    RUN_EXPS_IN_SERIAL: True
    SAVE_DATA: False
    GET_LOGS: False
    MODE: JUSTRUN
  gen_images:
    <<: *file_op_cfg
    EPOCHS: 0
    REGEN_DATA: True
    EXPS: []
  pre_pre_process:
    <<: *file_op_cfg
    EPOCHS: 1
    OVERWRITE_NORMS: True
  test_four:
    <<: *all
    NTRAIN: ["i0","i1"] #  these are now indexes
    EPOCHS: 2
    EXPS:
      -
        <<: *default_exp
        arch: SCRATCH
      -
        <<: *default_exp
        arch: INC
  run_one: &run_one
    <<: *all
    RUN_EXPS_IN_SERIAL: True
    EPOCHS: 1
    NTRAIN: ["i0"] #  these are now indexes
    EXPS:
      -
        <<: *default_exp
        arch: ALEX
  test_one: &test_one
    <<: *debug
    EPOCHS: 2
    NTRAIN: ["i0"] #  these are now indexes
    EXPS:
      -
        <<: *default_exp
        arch: ALEX
  test_GNET:
      <<: *test_one
      EXPS:
        -
          <<: *default_exp
          arch: GNET
  test_SCRATCH:
      <<: *test_one
      EXPS:
        -
          <<: *default_exp
          arch: SCRATCH
  test_INC:
      <<: *test_one
      EXPS:
        -
          <<: *default_exp
          arch: INC
  test_ALEX:
        <<: *test_one
        EXPS:
          -
            <<: *default_exp
            arch: ALEX
  run_ALEX: &run_ALEX
        <<: *run_one
        EXPS:
          -
            <<: *default_exp
            arch: ALEX
  sanity_tests: &sanity_tests
        <<: *run_one
        EXPERIMENT_NAME: sanity
        PIPELINE: SANITY
#        INTERACT: true
        EXPS:
          -
            <<: *default_exp
            arch: ALEX
          -
            <<: *default_exp
            arch: GNET
          -
            <<: *default_exp
            arch: INC
#          -
#            <<: *default_exp
#            arch: INC_ORIG
  default:
        <<: *run_one
        EXPERIMENT_NAME: test
        REGEN_DATA: true