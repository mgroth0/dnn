// Generated by CoffeeScript 2.5.1			//GEN
var inc_calcs, mplotly, plot_map;			//GEN
			//GEN
plot_map = {};			//GEN
			//GEN
mplotly = function(dv) {			//GEN
  return dv.def({			//GEN
    animate: function({data_changes, newXrange, newYrange, newAnnotations, dur, redraw}) {			//GEN
      var d, data, duration, i, j, k, layout, len, len1, rd, ref, update;			//GEN
      log('setting up animation');			//GEN
      duration = 500;			//GEN
      if (dur != null) {			//GEN
        duration = dur;			//GEN
      }			//GEN
      rd = true;			//GEN
      if (redraw != null) {			//GEN
        rd = redraw;			//GEN
      }			//GEN
      if ((data_changes != null) && ((data_changes.length > 0) != null)) {			//GEN
        data = [];			//GEN
        ref = this._fullData;			//GEN
        for (j = 0, len = ref.length; j < len; j++) {			//GEN
          d = ref[j];			//GEN
          data.push({			//GEN
            x: d.x,			//GEN
            y: d.y			//GEN
          });			//GEN
        }			//GEN
        for (k = 0, len1 = data_changes.length; k < len1; k++) {			//GEN
          [i, d] = data_changes[k];			//GEN
          if (data.length <= i) {			//GEN
            Plotly.addTraces(dv, d);			//GEN
            data.push(d);			//GEN
          } else {			//GEN
            data[i] = d;			//GEN
          }			//GEN
        }			//GEN
      }			//GEN
      layout = {};			//GEN
      if (newXrange != null) {			//GEN
        layout.xaxis = {			//GEN
          range: newXrange			//GEN
        };			//GEN
      }			//GEN
      if (newYrange != null) {			//GEN
        layout.yaxis = {			//GEN
          range: newYrange			//GEN
        };			//GEN
      }			//GEN
      if (newAnnotations != null) {			//GEN
        layout.annotations = newAnnotations;			//GEN
      }			//GEN
      if ((data_changes == null) || (data_changes.length === 0)) {			//GEN
        update = {			//GEN
          layout: layout			//GEN
        };			//GEN
      } else if ((newXrange == null) && (newYrange == null) && (newAnnotations == null)) {			//GEN
        update = {			//GEN
          data: data			//GEN
        };			//GEN
      } else {			//GEN
        update = {			//GEN
          data: data,			//GEN
          layout: layout			//GEN
        };			//GEN
      }			//GEN
      log('calling actual animation');			//GEN
      return Plotly.animate(this, update, {			//GEN
        transition: {			//GEN
          duration: duration,			//GEN
          easing: 'linear'			//GEN
        },			//GEN
        frame: {			//GEN
          duration: duration,			//GEN
          redraw: rd			//GEN
        }			//GEN
      });			//GEN
    }			//GEN
  });			//GEN
};			//GEN
			//GEN
inc_calcs = function(ecg_plt, inc) {			//GEN
  var newPointer, newStart, newStop, newXrange, newY, newYRange, pointerLine, windowRect;			//GEN
  newXrange = ecg_plt._fullLayout.xaxis.range.map(function(e) {			//GEN
    return e + inc;			//GEN
  });			//GEN
  newStart = ecg_plt._fullData[0].x.findIndex(function(e) {			//GEN
    return e >= newXrange[0];			//GEN
  });			//GEN
  newStop = ecg_plt._fullData[0].x.findIndex(function(e) {			//GEN
    return e >= newXrange[1];			//GEN
  });			//GEN
  newY = ecg_plt._fullData[0].y.slice(newStart, newStop);			//GEN
  newYRange = autoYRange(newY);			//GEN
  windowRect = {			//GEN
    x: [newXrange[1], newXrange[1], newXrange[0], newXrange[0]],			//GEN
    y: [4000, 0, 0, 4000]			//GEN
  };			//GEN
  newPointer = ((newXrange[1] - newXrange[0]) / 2.0) + newXrange[0];			//GEN
  pointerLine = {			//GEN
    x: [newPointer, newPointer],			//GEN
    y: [-1, 1]			//GEN
  };			//GEN
  return [newXrange, newYRange, newPointer, pointerLine, windowRect, newStart, newStop];			//GEN
};			//GEN
			//GEN
